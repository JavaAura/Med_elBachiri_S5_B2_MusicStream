{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { of, from } from 'rxjs';\nimport { map, mergeMap, catchError, tap, withLatestFrom } from 'rxjs/operators';\nimport * as TrackActions from './track.actions';\nimport * as fromTrack from './track.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"../../services/track.service\";\nimport * as i4 from \"../../services/player.service\";\nexport class TrackEffects {\n  constructor(actions$, store, trackService, playerService) {\n    this.actions$ = actions$;\n    this.store = store;\n    this.trackService = trackService;\n    this.playerService = playerService;\n    this.loadTracks$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.loadTracks), mergeMap(() => this.trackService.loadTracks().pipe(map(tracks => TrackActions.loadTracksSuccess({\n      tracks\n    })), catchError(error => of(TrackActions.loadTracksFailure({\n      error\n    })))))));\n    this.playTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.playTrack), tap(({\n      track\n    }) => this.playerService.playTrack(track))), {\n      dispatch: false\n    });\n    this.pauseTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.pauseTrack), tap(() => this.playerService.pauseTrack())), {\n      dispatch: false\n    });\n    this.resumeTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.resumeTrack), withLatestFrom(this.store.select(fromTrack.selectCurrentTrack)), tap(([_, track]) => {\n      if (track) {\n        this.playerService.resumeTrack();\n      }\n    })), {\n      dispatch: false\n    });\n    this.seek$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.seek), tap(({\n      time\n    }) => this.playerService.seek(time))), {\n      dispatch: false\n    });\n    this.setVolume$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.setVolume), tap(({\n      volume\n    }) => this.playerService.setVolume(volume))), {\n      dispatch: false\n    });\n    this.previousTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.previousTrack), withLatestFrom(this.store.select(fromTrack.selectAllTracks), this.store.select(fromTrack.selectCurrentTrackIndex)), map(([_, tracks, currentIndex]) => {\n      if (currentIndex > 0) {\n        return TrackActions.playTrack({\n          track: tracks[currentIndex - 1]\n        });\n      }\n      return TrackActions.stopTrack();\n    })));\n    this.nextTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.nextTrack), withLatestFrom(this.store.select(fromTrack.selectAllTracks), this.store.select(fromTrack.selectCurrentTrackIndex)), map(([_, tracks, currentIndex]) => {\n      if (currentIndex < tracks.length - 1) {\n        return TrackActions.playTrack({\n          track: tracks[currentIndex + 1]\n        });\n      }\n      return TrackActions.stopTrack();\n    })));\n    this.loadTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.loadTrack), withLatestFrom(this.store.select(fromTrack.selectAllTracks)), map(([{\n      id\n    }, tracks]) => {\n      const track = tracks.find(t => t.id === id);\n      if (track) {\n        return TrackActions.setTrack({\n          track\n        });\n      }\n      return TrackActions.loadTracksFailure({\n        error: 'Track not found'\n      });\n    })));\n    this.addTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.addTrack), mergeMap(({\n      track,\n      audioFile\n    }) => from(this.trackService.addTrack(track, audioFile)).pipe(map(newTrack => TrackActions.addTrackSuccess({\n      track: newTrack\n    })), catchError(error => {\n      console.error('Error adding track:', error);\n      return of(TrackActions.addTrackFailure({\n        error\n      }));\n    })))));\n    this.addTrackSuccess$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.addTrackSuccess), map(() => TrackActions.loadTracks())));\n    this.deleteTrack$ = createEffect(() => this.actions$.pipe(ofType(TrackActions.deleteTrack)));\n  }\n  static {\n    this.ɵfac = function TrackEffects_Factory(t) {\n      return new (t || TrackEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.TrackService), i0.ɵɵinject(i4.PlayerService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TrackEffects,\n      factory: TrackEffects.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["createEffect","ofType","of","from","map","mergeMap","catchError","tap","withLatestFrom","TrackActions","fromTrack","TrackEffects","constructor","actions$","store","trackService","playerService","loadTracks$","pipe","loadTracks","tracks","loadTracksSuccess","error","loadTracksFailure","playTrack$","playTrack","track","dispatch","pauseTrack$","pauseTrack","resumeTrack$","resumeTrack","select","selectCurrentTrack","_","seek$","seek","time","setVolume$","setVolume","volume","previousTrack$","previousTrack","selectAllTracks","selectCurrentTrackIndex","currentIndex","stopTrack","nextTrack$","nextTrack","length","loadTrack$","loadTrack","id","find","t","setTrack","addTrack$","addTrack","audioFile","newTrack","addTrackSuccess","console","addTrackFailure","addTrackSuccess$","deleteTrack$","deleteTrack","i0","ɵɵinject","i1","Actions","i2","Store","i3","TrackService","i4","PlayerService","factory","ɵfac"],"sources":["/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/app/src/app/core/store/track/track.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { of, from } from 'rxjs';\nimport { map, mergeMap, catchError, tap, withLatestFrom } from 'rxjs/operators';\nimport * as TrackActions from './track.actions';\nimport * as fromTrack from './track.selectors';\nimport { TrackService } from '../../services/track.service';\nimport { PlayerService } from '../../services/player.service';\n\n@Injectable()\nexport class TrackEffects {\n  loadTracks$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.loadTracks),\n      mergeMap(() => this.trackService.loadTracks()\n        .pipe(\n          map(tracks => TrackActions.loadTracksSuccess({ tracks })),\n          catchError(error => of(TrackActions.loadTracksFailure({ error })))\n        ))\n    )\n  );\n\n  playTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.playTrack),\n      tap(({ track }) => this.playerService.playTrack(track))\n    ),\n    { dispatch: false }\n  );\n\n  pauseTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.pauseTrack),\n      tap(() => this.playerService.pauseTrack())\n    ),\n    { dispatch: false }\n  );\n\n  resumeTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.resumeTrack),\n      withLatestFrom(this.store.select(fromTrack.selectCurrentTrack)),\n      tap(([_, track]) => {\n        if (track) {\n          this.playerService.resumeTrack();\n        }\n      })\n    ),\n    { dispatch: false }\n  );\n\n  seek$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.seek),\n      tap(({ time }) => this.playerService.seek(time))\n    ),\n    { dispatch: false }\n  );\n\n  setVolume$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.setVolume),\n      tap(({ volume }) => this.playerService.setVolume(volume))\n    ),\n    { dispatch: false }\n  );\n\n  previousTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.previousTrack),\n      withLatestFrom(\n        this.store.select(fromTrack.selectAllTracks),\n        this.store.select(fromTrack.selectCurrentTrackIndex)\n      ),\n      map(([_, tracks, currentIndex]) => {\n        if (currentIndex > 0) {\n          return TrackActions.playTrack({ track: tracks[currentIndex - 1] });\n        }\n        return TrackActions.stopTrack();\n      })\n    )\n  );\n\n  nextTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.nextTrack),\n      withLatestFrom(\n        this.store.select(fromTrack.selectAllTracks),\n        this.store.select(fromTrack.selectCurrentTrackIndex)\n      ),\n      map(([_, tracks, currentIndex]) => {\n        if (currentIndex < tracks.length - 1) {\n          return TrackActions.playTrack({ track: tracks[currentIndex + 1] });\n        }\n        return TrackActions.stopTrack();\n      })\n    )\n  );\n\n  loadTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.loadTrack),\n      withLatestFrom(this.store.select(fromTrack.selectAllTracks)),\n      map(([{ id }, tracks]) => {\n        const track = tracks.find(t => t.id === id);\n        if (track) {\n          return TrackActions.setTrack({ track });\n        }\n        return TrackActions.loadTracksFailure({ error: 'Track not found' });\n      })\n    )\n  );\n\n  addTrack$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.addTrack),\n      mergeMap(({ track, audioFile }) =>\n        from(this.trackService.addTrack(track, audioFile)).pipe(\n          map(newTrack => TrackActions.addTrackSuccess({ track: newTrack })),\n          catchError(error => {\n            console.error('Error adding track:', error);\n            return of(TrackActions.addTrackFailure({ error }));\n          })\n        )\n      )\n    )\n  );\n\n  addTrackSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TrackActions.addTrackSuccess),\n      map(() => TrackActions.loadTracks())\n    )\n  );\n\n  deleteTrack$ = createEffect(() => \n    this.actions$.pipe(\n      ofType(TrackActions.deleteTrack)\n      \n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private trackService: TrackService,\n    private playerService: PlayerService\n  ) {}\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}