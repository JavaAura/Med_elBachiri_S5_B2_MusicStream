{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as TrackActions from './track.actions';\nimport { createSelector } from '@ngrx/store';\nexport const initialState = {\n  tracks: [],\n  currentTrack: null,\n  isPlaying: false,\n  currentTime: 0,\n  duration: 0,\n  volume: 1,\n  loading: false,\n  error: null\n};\nexport const trackReducer = createReducer(initialState, on(TrackActions.loadTracks, state => ({\n  ...state,\n  loading: true\n})), on(TrackActions.loadTracksSuccess, (state, {\n  tracks\n}) => ({\n  ...state,\n  tracks,\n  loading: false,\n  error: null\n})), on(TrackActions.loadTracksFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: false,\n  error\n})), on(TrackActions.addTrackSuccess, (state, {\n  track\n}) => ({\n  ...state,\n  tracks: [...state.tracks, track]\n})), on(TrackActions.playTrack, (state, {\n  track\n}) => ({\n  ...state,\n  currentTrack: track,\n  isPlaying: true\n})), on(TrackActions.pauseTrack, state => ({\n  ...state,\n  isPlaying: false\n})), on(TrackActions.stopTrack, state => ({\n  ...state,\n  isPlaying: false,\n  currentTime: 0\n})), on(TrackActions.updateProgress, (state, {\n  currentTime,\n  duration\n}) => ({\n  ...state,\n  currentTime,\n  duration\n})), on(TrackActions.setVolume, (state, {\n  volume\n}) => ({\n  ...state,\n  volume\n})));\nexport const selectPlaybackState = createSelector(selectTrackState, state => ({\n  isPlaying: state.isPlaying,\n  currentTime: state.currentTime,\n  duration: state.duration,\n  volume: state.volume\n}));","map":{"version":3,"names":["createReducer","on","TrackActions","createSelector","initialState","tracks","currentTrack","isPlaying","currentTime","duration","volume","loading","error","trackReducer","loadTracks","state","loadTracksSuccess","loadTracksFailure","addTrackSuccess","track","playTrack","pauseTrack","stopTrack","updateProgress","setVolume","selectPlaybackState","selectTrackState"],"sources":["/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/cursor_app/src/app/core/store/track/track.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\nimport { Track, PlaybackState } from '../../models/track.model';\nimport * as TrackActions from './track.actions';\nimport { createSelector } from '@ngrx/store';\n\nexport interface TrackState {\n  tracks: Track[];\n  currentTrack: Track | null;\n  isPlaying: boolean;\n  currentTime: number;\n  duration: number;\n  volume: number;\n  loading: boolean;\n  error: any;\n}\n\nexport const initialState: TrackState = {\n  tracks: [],\n  currentTrack: null,\n  isPlaying: false,\n  currentTime: 0,\n  duration: 0,\n  volume: 1,\n  loading: false,\n  error: null\n};\n\nexport const trackReducer = createReducer(\n  initialState,\n  on(TrackActions.loadTracks, state => ({\n    ...state,\n    loading: true\n  })),\n  on(TrackActions.loadTracksSuccess, (state, { tracks }) => ({\n    ...state,\n    tracks,\n    loading: false,\n    error: null\n  })),\n  on(TrackActions.loadTracksFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n  on(TrackActions.addTrackSuccess, (state, { track }) => ({\n    ...state,\n    tracks: [...state.tracks, track]\n  })),\n  on(TrackActions.playTrack, (state, { track }) => ({\n    ...state,\n    currentTrack: track,\n    isPlaying: true\n  })),\n  on(TrackActions.pauseTrack, state => ({\n    ...state,\n    isPlaying: false\n  })),\n  on(TrackActions.stopTrack, state => ({\n    ...state,\n    isPlaying: false,\n    currentTime: 0\n  })),\n  on(TrackActions.updateProgress, (state, { currentTime, duration }) => ({\n    ...state,\n    currentTime,\n    duration\n  })),\n  on(TrackActions.setVolume, (state, { volume }) => ({\n    ...state,\n    volume\n  }))\n);\n\nexport const selectPlaybackState = createSelector(\n  selectTrackState,\n  (state): PlaybackState => ({\n    isPlaying: state.isPlaying,\n    currentTime: state.currentTime,\n    duration: state.duration,\n    volume: state.volume\n  })\n); "],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAE/C,OAAO,KAAKC,YAAY,MAAM,iBAAiB;AAC/C,SAASC,cAAc,QAAQ,aAAa;AAa5C,OAAO,MAAMC,YAAY,GAAe;EACtCC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE,CAAC;EACXC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR;AAED,OAAO,MAAMC,YAAY,GAAGb,aAAa,CACvCI,YAAY,EACZH,EAAE,CAACC,YAAY,CAACY,UAAU,EAAEC,KAAK,KAAK;EACpC,GAAGA,KAAK;EACRJ,OAAO,EAAE;CACV,CAAC,CAAC,EACHV,EAAE,CAACC,YAAY,CAACc,iBAAiB,EAAE,CAACD,KAAK,EAAE;EAAEV;AAAM,CAAE,MAAM;EACzD,GAAGU,KAAK;EACRV,MAAM;EACNM,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR,CAAC,CAAC,EACHX,EAAE,CAACC,YAAY,CAACe,iBAAiB,EAAE,CAACF,KAAK,EAAE;EAAEH;AAAK,CAAE,MAAM;EACxD,GAAGG,KAAK;EACRJ,OAAO,EAAE,KAAK;EACdC;CACD,CAAC,CAAC,EACHX,EAAE,CAACC,YAAY,CAACgB,eAAe,EAAE,CAACH,KAAK,EAAE;EAAEI;AAAK,CAAE,MAAM;EACtD,GAAGJ,KAAK;EACRV,MAAM,EAAE,CAAC,GAAGU,KAAK,CAACV,MAAM,EAAEc,KAAK;CAChC,CAAC,CAAC,EACHlB,EAAE,CAACC,YAAY,CAACkB,SAAS,EAAE,CAACL,KAAK,EAAE;EAAEI;AAAK,CAAE,MAAM;EAChD,GAAGJ,KAAK;EACRT,YAAY,EAAEa,KAAK;EACnBZ,SAAS,EAAE;CACZ,CAAC,CAAC,EACHN,EAAE,CAACC,YAAY,CAACmB,UAAU,EAAEN,KAAK,KAAK;EACpC,GAAGA,KAAK;EACRR,SAAS,EAAE;CACZ,CAAC,CAAC,EACHN,EAAE,CAACC,YAAY,CAACoB,SAAS,EAAEP,KAAK,KAAK;EACnC,GAAGA,KAAK;EACRR,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE;CACd,CAAC,CAAC,EACHP,EAAE,CAACC,YAAY,CAACqB,cAAc,EAAE,CAACR,KAAK,EAAE;EAAEP,WAAW;EAAEC;AAAQ,CAAE,MAAM;EACrE,GAAGM,KAAK;EACRP,WAAW;EACXC;CACD,CAAC,CAAC,EACHR,EAAE,CAACC,YAAY,CAACsB,SAAS,EAAE,CAACT,KAAK,EAAE;EAAEL;AAAM,CAAE,MAAM;EACjD,GAAGK,KAAK;EACRL;CACD,CAAC,CAAC,CACJ;AAED,OAAO,MAAMe,mBAAmB,GAAGtB,cAAc,CAC/CuB,gBAAgB,EACfX,KAAK,KAAqB;EACzBR,SAAS,EAAEQ,KAAK,CAACR,SAAS;EAC1BC,WAAW,EAAEO,KAAK,CAACP,WAAW;EAC9BC,QAAQ,EAAEM,KAAK,CAACN,QAAQ;EACxBC,MAAM,EAAEK,KAAK,CAACL;CACf,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}