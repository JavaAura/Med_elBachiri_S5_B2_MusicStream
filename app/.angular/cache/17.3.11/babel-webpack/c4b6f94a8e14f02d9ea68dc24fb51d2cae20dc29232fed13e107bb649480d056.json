{"ast":null,"code":"import _asyncToGenerator from \"/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/cursor_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { db } from './db.service';\nimport * as TrackActions from '../store/track/track.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class PlayerService {\n  constructor(store) {\n    this.store = store;\n    this.audio = new Audio();\n    this.setupAudioListeners();\n  }\n  setupAudioListeners() {\n    this.audio.addEventListener('timeupdate', () => {\n      this.store.dispatch(TrackActions.updateProgress({\n        currentTime: this.audio.currentTime,\n        duration: this.audio.duration\n      }));\n    });\n    this.audio.addEventListener('ended', () => {\n      this.store.dispatch(TrackActions.nextTrack());\n    });\n    this.audio.addEventListener('play', () => {\n      this.store.dispatch(TrackActions.resumeTrack());\n    });\n    this.audio.addEventListener('pause', () => {\n      this.store.dispatch(TrackActions.pauseTrack());\n    });\n  }\n  playTrack(track) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const audioFile = yield db.audioFiles.where('trackId').equals(track.id).first();\n        if (!audioFile) throw new Error('Audio file not found');\n        const audioUrl = URL.createObjectURL(audioFile.blob);\n        _this.audio.src = audioUrl;\n        yield _this.audio.play();\n      } catch (error) {\n        console.error('Error playing track:', error);\n        throw error;\n      }\n    })();\n  }\n  pauseTrack() {\n    this.audio.pause();\n  }\n  resumeTrack() {\n    this.audio.resu();\n  }\n  seek(time) {\n    this.audio.currentTime = time;\n  }\n  setVolume(volume) {\n    this.audio.volume = volume;\n  }\n  static {\n    this.ɵfac = function PlayerService_Factory(t) {\n      return new (t || PlayerService)(i0.ɵɵinject(i1.Store));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PlayerService,\n      factory: PlayerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["db","TrackActions","PlayerService","constructor","store","audio","Audio","setupAudioListeners","addEventListener","dispatch","updateProgress","currentTime","duration","nextTrack","resumeTrack","pauseTrack","playTrack","track","_this","_asyncToGenerator","audioFile","audioFiles","where","equals","id","first","Error","audioUrl","URL","createObjectURL","blob","src","play","error","console","pause","resu","seek","time","setVolume","volume","i0","ɵɵinject","i1","Store","factory","ɵfac","providedIn"],"sources":["/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/cursor_app/src/app/core/services/player.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Track } from '../models/track.model';\nimport { db } from './db.service';\nimport * as TrackActions from '../store/track/track.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  private audio: HTMLAudioElement;\n\n  constructor(private store: Store) {\n    this.audio = new Audio();\n    this.setupAudioListeners();\n  }\n\n  private setupAudioListeners() {\n    this.audio.addEventListener('timeupdate', () => {\n      this.store.dispatch(TrackActions.updateProgress({\n        currentTime: this.audio.currentTime,\n        duration: this.audio.duration\n      }));\n    });\n\n    this.audio.addEventListener('ended', () => {\n      this.store.dispatch(TrackActions.nextTrack());\n    });\n\n    this.audio.addEventListener('play', () => {\n      this.store.dispatch(TrackActions.resumeTrack());\n    });\n\n    this.audio.addEventListener('pause', () => {\n      this.store.dispatch(TrackActions.pauseTrack());\n    });\n  }\n\n  async playTrack(track: Track) {\n    try {\n      const audioFile = await db.audioFiles.where('trackId').equals(track.id!).first();\n      if (!audioFile) throw new Error('Audio file not found');\n\n      const audioUrl = URL.createObjectURL(audioFile.blob);\n      this.audio.src = audioUrl;\n      await this.audio.play();\n    } catch (error) {\n      console.error('Error playing track:', error);\n      throw error;\n    }\n  }\n\n  pauseTrack() {\n    this.audio.pause();\n  }\n\n  resumeTrack() {\n    this.audio.resu();\n  }\n\n  seek(time: number) {\n    this.audio.currentTime = time;\n  }\n\n  setVolume(volume: number) {\n    this.audio.volume = volume;\n  }\n} "],"mappings":";AAGA,SAASA,EAAE,QAAQ,cAAc;AACjC,OAAO,KAAKC,YAAY,MAAM,8BAA8B;;;AAK5D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,KAAY;IAAZ,KAAAA,KAAK,GAALA,KAAK;IACvB,IAAI,CAACC,KAAK,GAAG,IAAIC,KAAK,EAAE;IACxB,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEQA,mBAAmBA,CAAA;IACzB,IAAI,CAACF,KAAK,CAACG,gBAAgB,CAAC,YAAY,EAAE,MAAK;MAC7C,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACR,YAAY,CAACS,cAAc,CAAC;QAC9CC,WAAW,EAAE,IAAI,CAACN,KAAK,CAACM,WAAW;QACnCC,QAAQ,EAAE,IAAI,CAACP,KAAK,CAACO;OACtB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACP,KAAK,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAK;MACxC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACR,YAAY,CAACY,SAAS,EAAE,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAI,CAACR,KAAK,CAACG,gBAAgB,CAAC,MAAM,EAAE,MAAK;MACvC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACR,YAAY,CAACa,WAAW,EAAE,CAAC;IACjD,CAAC,CAAC;IAEF,IAAI,CAACT,KAAK,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAK;MACxC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACR,YAAY,CAACc,UAAU,EAAE,CAAC;IAChD,CAAC,CAAC;EACJ;EAEMC,SAASA,CAACC,KAAY;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B,IAAI;QACF,MAAMC,SAAS,SAASpB,EAAE,CAACqB,UAAU,CAACC,KAAK,CAAC,SAAS,CAAC,CAACC,MAAM,CAACN,KAAK,CAACO,EAAG,CAAC,CAACC,KAAK,EAAE;QAChF,IAAI,CAACL,SAAS,EAAE,MAAM,IAAIM,KAAK,CAAC,sBAAsB,CAAC;QAEvD,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACT,SAAS,CAACU,IAAI,CAAC;QACpDZ,KAAI,CAACb,KAAK,CAAC0B,GAAG,GAAGJ,QAAQ;QACzB,MAAMT,KAAI,CAACb,KAAK,CAAC2B,IAAI,EAAE;OACxB,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,MAAMA,KAAK;;IACZ;EACH;EAEAlB,UAAUA,CAAA;IACR,IAAI,CAACV,KAAK,CAAC8B,KAAK,EAAE;EACpB;EAEArB,WAAWA,CAAA;IACT,IAAI,CAACT,KAAK,CAAC+B,IAAI,EAAE;EACnB;EAEAC,IAAIA,CAACC,IAAY;IACf,IAAI,CAACjC,KAAK,CAACM,WAAW,GAAG2B,IAAI;EAC/B;EAEAC,SAASA,CAACC,MAAc;IACtB,IAAI,CAACnC,KAAK,CAACmC,MAAM,GAAGA,MAAM;EAC5B;;;uBAzDWtC,aAAa,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA;IAAA;EAAA;;;aAAb1C,aAAa;MAAA2C,OAAA,EAAb3C,aAAa,CAAA4C,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}