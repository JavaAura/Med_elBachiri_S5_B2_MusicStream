{"ast":null,"code":"import { createFeatureSelector, createSelector } from '@ngrx/store';\nexport const selectTrackState = createFeatureSelector('track');\nexport const selectAllTracks = createSelector(selectTrackState, state => state.tracks);\nexport const selectCurrentTrack = createSelector(selectTrackState, state => state.currentTrack);\nexport const selectCurrentTrackIndex = createSelector(selectTrackState, state => state.tracks.findIndex(track => track.id === state.currentTrack?.id));\nexport const selectHasPreviousTrack = createSelector(selectCurrentTrackIndex, index => index > 0);\nexport const selectHasNextTrack = createSelector(selectCurrentTrackIndex, selectAllTracks, (index, tracks) => index < tracks.length - 1 && index !== -1);\nexport const selectPlaybackState = createSelector(selectTrackState, state => ({\n  isPlaying: state.isPlaying,\n  currentTime: state.currentTime,\n  duration: state.duration,\n  volume: state.volume\n}));\nexport const selectLoading = createSelector(selectTrackState, state => state.loading);\nexport const selectError = createSelector(selectTrackState, state => state.error);","map":{"version":3,"names":["createFeatureSelector","createSelector","selectTrackState","selectAllTracks","state","tracks","selectCurrentTrack","currentTrack","selectCurrentTrackIndex","findIndex","track","id","selectHasPreviousTrack","index","selectHasNextTrack","length","selectPlaybackState","isPlaying","currentTime","duration","volume","selectLoading","loading","selectError","error"],"sources":["/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/cursor_app/src/app/core/store/track/track.selectors.ts"],"sourcesContent":["import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { TrackState } from './track.reducer';\nimport { PlaybackState } from '../../models/track.model';\n\nexport const selectTrackState = createFeatureSelector<TrackState>('track');\n\nexport const selectAllTracks = createSelector(\n  selectTrackState,\n  state => state.tracks\n);\n\nexport const selectCurrentTrack = createSelector(\n  selectTrackState,\n  state => state.currentTrack\n);\n\nexport const selectCurrentTrackIndex = createSelector(\n  selectTrackState,\n  state => state.tracks.findIndex(track => track.id === state.currentTrack?.id)\n);\n\nexport const selectHasPreviousTrack = createSelector(\n  selectCurrentTrackIndex,\n  index => index > 0\n);\n\nexport const selectHasNextTrack = createSelector(\n  selectCurrentTrackIndex,\n  selectAllTracks,\n  (index, tracks) => index < tracks.length - 1 && index !== -1\n);\n\nexport const selectPlaybackState = createSelector(\n  selectTrackState,\n  (state): PlaybackState => ({\n    isPlaying: state.isPlaying,\n    currentTime: state.currentTime,\n    duration: state.duration,\n    volume: state.volume\n  })\n);\n\nexport const selectLoading = createSelector(\n  selectTrackState,\n  state => state.loading\n);\n\nexport const selectError = createSelector(\n  selectTrackState,\n  state => state.error\n); "],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,cAAc,QAAQ,aAAa;AAInE,OAAO,MAAMC,gBAAgB,GAAGF,qBAAqB,CAAa,OAAO,CAAC;AAE1E,OAAO,MAAMG,eAAe,GAAGF,cAAc,CAC3CC,gBAAgB,EAChBE,KAAK,IAAIA,KAAK,CAACC,MAAM,CACtB;AAED,OAAO,MAAMC,kBAAkB,GAAGL,cAAc,CAC9CC,gBAAgB,EAChBE,KAAK,IAAIA,KAAK,CAACG,YAAY,CAC5B;AAED,OAAO,MAAMC,uBAAuB,GAAGP,cAAc,CACnDC,gBAAgB,EAChBE,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACI,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKP,KAAK,CAACG,YAAY,EAAEI,EAAE,CAAC,CAC9E;AAED,OAAO,MAAMC,sBAAsB,GAAGX,cAAc,CAClDO,uBAAuB,EACvBK,KAAK,IAAIA,KAAK,GAAG,CAAC,CACnB;AAED,OAAO,MAAMC,kBAAkB,GAAGb,cAAc,CAC9CO,uBAAuB,EACvBL,eAAe,EACf,CAACU,KAAK,EAAER,MAAM,KAAKQ,KAAK,GAAGR,MAAM,CAACU,MAAM,GAAG,CAAC,IAAIF,KAAK,KAAK,CAAC,CAAC,CAC7D;AAED,OAAO,MAAMG,mBAAmB,GAAGf,cAAc,CAC/CC,gBAAgB,EACfE,KAAK,KAAqB;EACzBa,SAAS,EAAEb,KAAK,CAACa,SAAS;EAC1BC,WAAW,EAAEd,KAAK,CAACc,WAAW;EAC9BC,QAAQ,EAAEf,KAAK,CAACe,QAAQ;EACxBC,MAAM,EAAEhB,KAAK,CAACgB;CACf,CAAC,CACH;AAED,OAAO,MAAMC,aAAa,GAAGpB,cAAc,CACzCC,gBAAgB,EAChBE,KAAK,IAAIA,KAAK,CAACkB,OAAO,CACvB;AAED,OAAO,MAAMC,WAAW,GAAGtB,cAAc,CACvCC,gBAAgB,EAChBE,KAAK,IAAIA,KAAK,CAACoB,KAAK,CACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}