{"ast":null,"code":"import _asyncToGenerator from \"/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/cursor_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport { db } from './db.service';\nimport * as i0 from \"@angular/core\";\nexport class PlayerService {\n  constructor() {\n    this.state = new BehaviorSubject({\n      currentTrack: null,\n      isPlaying: false,\n      currentTime: 0,\n      duration: 0,\n      volume: 1\n    });\n    this.state$ = this.state.asObservable();\n    this.audio = new Audio();\n    this.setupAudioListeners();\n  }\n  setupAudioListeners() {\n    this.audio.addEventListener('timeupdate', () => {\n      this.updateState({\n        currentTime: this.audio.currentTime\n      });\n    });\n    this.audio.addEventListener('loadedmetadata', () => {\n      this.updateState({\n        duration: this.audio.duration\n      });\n    });\n    this.audio.addEventListener('ended', () => {\n      this.updateState({\n        isPlaying: false,\n        currentTime: 0\n      });\n    });\n  }\n  updateState(partial) {\n    this.state.next({\n      ...this.state.value,\n      ...partial\n    });\n  }\n  playTrack(track) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Get audio file from IndexedDB\n        const audioFile = yield db.audioFiles.where('trackId').equals(track.id).first();\n        if (!audioFile) throw new Error('Audio file not found');\n        // Create object URL from blob\n        const audioUrl = URL.createObjectURL(audioFile.blob);\n        // Set new audio source\n        _this.audio.src = audioUrl;\n        _this.audio.load();\n        // Play and update state\n        yield _this.audio.play();\n        _this.updateState({\n          currentTrack: track,\n          isPlaying: true,\n          currentTime: 0\n        });\n      } catch (error) {\n        console.error('Error playing track:', error);\n        throw error;\n      }\n    })();\n  }\n  togglePlayPause() {\n    if (this.state.value.currentTrack) {\n      if (this.state.value.isPlaying) {\n        this.audio.pause();\n      } else {\n        this.audio.play();\n      }\n      this.updateState({\n        isPlaying: !this.state.value.isPlaying\n      });\n    }\n  }\n  seek(time) {\n    if (this.audio) {\n      this.audio.currentTime = time;\n      this.updateState({\n        currentTime: time\n      });\n    }\n  }\n  setVolume(volume) {\n    this.audio.volume = volume;\n    this.updateState({\n      volume\n    });\n  }\n  stop() {\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    this.updateState({\n      isPlaying: false,\n      currentTime: 0\n    });\n  }\n  static {\n    this.ɵfac = function PlayerService_Factory(t) {\n      return new (t || PlayerService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PlayerService,\n      factory: PlayerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","db","PlayerService","constructor","state","currentTrack","isPlaying","currentTime","duration","volume","state$","asObservable","audio","Audio","setupAudioListeners","addEventListener","updateState","partial","next","value","playTrack","track","_this","_asyncToGenerator","audioFile","audioFiles","where","equals","id","first","Error","audioUrl","URL","createObjectURL","blob","src","load","play","error","console","togglePlayPause","pause","seek","time","setVolume","stop","factory","ɵfac","providedIn"],"sources":["/home/exshy/Documents/GitHub/Briefs/Angular/MusicStream/cursor_app/src/app/core/services/player.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Track } from '../models/track.model';\nimport { db } from './db.service';\n\nexport interface PlayerState {\n  currentTrack: Track | null;\n  isPlaying: boolean;\n  currentTime: number;\n  duration: number;\n  volume: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  private audio: HTMLAudioElement;\n  private state = new BehaviorSubject<PlayerState>({\n    currentTrack: null,\n    isPlaying: false,\n    currentTime: 0,\n    duration: 0,\n    volume: 1\n  });\n\n  state$ = this.state.asObservable();\n\n  constructor() {\n    this.audio = new Audio();\n    this.setupAudioListeners();\n  }\n\n  private setupAudioListeners() {\n    this.audio.addEventListener('timeupdate', () => {\n      this.updateState({ currentTime: this.audio.currentTime });\n    });\n\n    this.audio.addEventListener('loadedmetadata', () => {\n      this.updateState({ duration: this.audio.duration });\n    });\n\n    this.audio.addEventListener('ended', () => {\n      this.updateState({ isPlaying: false, currentTime: 0 });\n    });\n  }\n\n  private updateState(partial: Partial<PlayerState>) {\n    this.state.next({\n      ...this.state.value,\n      ...partial\n    });\n  }\n\n  async playTrack(track: Track) {\n    try {\n      // Get audio file from IndexedDB\n      const audioFile = await db.audioFiles.where('trackId').equals(track.id!).first();\n      if (!audioFile) throw new Error('Audio file not found');\n\n      // Create object URL from blob\n      const audioUrl = URL.createObjectURL(audioFile.blob);\n      \n      // Set new audio source\n      this.audio.src = audioUrl;\n      this.audio.load();\n      \n      // Play and update state\n      await this.audio.play();\n      this.updateState({\n        currentTrack: track,\n        isPlaying: true,\n        currentTime: 0\n      });\n    } catch (error) {\n      console.error('Error playing track:', error);\n      throw error;\n    }\n  }\n\n  togglePlayPause() {\n    if (this.state.value.currentTrack) {\n      if (this.state.value.isPlaying) {\n        this.audio.pause();\n      } else {\n        this.audio.play();\n      }\n      this.updateState({ isPlaying: !this.state.value.isPlaying });\n    }\n  }\n\n  seek(time: number) {\n    if (this.audio) {\n      this.audio.currentTime = time;\n      this.updateState({ currentTime: time });\n    }\n  }\n\n  setVolume(volume: number) {\n    this.audio.volume = volume;\n    this.updateState({ volume });\n  }\n\n  stop() {\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    this.updateState({\n      isPlaying: false,\n      currentTime: 0\n    });\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}